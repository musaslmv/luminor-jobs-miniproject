# -*- coding: utf-8 -*-
"""luminor-jobs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j1t85ZKXee2SEMZNjNmav-ODrcsNu3Yx
"""

from bs4 import BeautifulSoup
import requests
import pandas as pd

search = input("What position are you looking for?: ") #if input is None, url will provide all positions

url = f"https://luminorbank.teamtailor.com/jobs?query={search}"
page = requests.get(url).text

doc = BeautifulSoup(page, "html.parser")

jobresults = doc.find_all("li")[4:-6]

positions = {}
i=0

for job in jobresults:
  i+=1
  positiontitle = job.span.get("title")
  link = job.a.get("href")
  division = job.find(class_="mt-1 text-md").find_all("span")[0].text
  location = job.find(class_="mt-1 text-md").find_all("span")[2].text

  try:
        environment = job.find(class_="mt-1 text-md").find_all("span")[4].text.strip()
  except:
        environment = "On-site"

  positions["position{0}".format(i)] = {'title': positiontitle, 'link': link, 'location': location, 'environment': environment, 'division': division}

positions

jobs_df = pd.DataFrame.from_dict(positions, orient='index', columns=['title', 'location', 'environment', 'division', 'link']) #creating dataframe

jobs_df

page_results =[]
for link in jobs_df['link']:
  posURL = f"{link}"
  pos_page = requests.get(posURL).text

  pos_doc = BeautifulSoup(pos_page, "html.parser")
  page_results.append(pos_doc.find_all(class_="mx-auto max-w-[750px] prose font-company-body overflow-hidden"))

similarity = []

my_knowledge = ["Python", "SQL", "can-do attidute", "Machine Learning", "Data Analysis", "Degree", "Master's", "Bachelor", "English", "Ability to learn", "English"] #person-specific knowledge
  

for page in range(len(jobs_df)):
  contents = page_results[page][0].find_all("li")
  count = 0
  for content in contents:
    try:
      for knowledge in my_knowledge:
        if knowledge.lower() in content.text.lower():
          count += 1
    except:
        continue
  similarity.append(count)

similarity_perc = []
for item in similarity:
  similarity_perc.append(item/(len(my_knowledge)))

jobs_df["Similarity"] = similarity_perc #adding a column - similarity

jobs_df.nlargest(n=1, columns=['Similarity'])

jobs_df.to_csv("luminor-jobs.csv", index=True)